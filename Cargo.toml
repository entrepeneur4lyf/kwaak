[package]
name = "kwaak"
version = "0.14.1"
edition = "2021"
categories = ["development-tools", "command-line-utilities"]
readme = "README.md"
repository = "https://github.com/bosun-ai/kwaak"
homepage = "https://github.com/bosun-ai/kwaak"
keywords = ["terminal", "swiftide", "tui", "ai", "llm"]
description = "Run a team of autonomous agents on your code, right from your terminal"
license = "MIT"

[dependencies]
anyhow = "1.0.97"
crossterm = "0.28.1"
ratatui = { version = "0.29.0", features = ["unstable-rendered-line-info"] }
tui-textarea = "0.7.0"
tokio = { version = "1.43.0", features = ["full"] }
tokio-util = { version = "0.7.13", features = ["rt"] }
strum = "0.27.1"
strum_macros = "0.27.1"
swiftide-docker-executor = "0.6.7"
swiftide = { version = "0.22.0", features = [
  "lancedb",
  "openai",
  "tree-sitter",
  "redb",
  "ollama",
  "swiftide-agents",
  "open-router",
  "fastembed",
  "anthropic",

] }
fastembed = "4.6.0"
swiftide-macros = { version = "0.22.0" }
toml = "0.8.20"
serde = { version = "1.0.218", features = ["derive"] }
serde_json = "1.0.140"
secrecy = { version = "0.10.3", features = ["serde"] }
tracing = "0.1.41"
async-openai = "0.27.2"
async-anthropic = "0.3.0"
dirs = "6.0.0"
tracing-subscriber = { version = "0.3.19", features = ["env-filter"] }
tracing-appender = "0.2.3"
tracing-opentelemetry = { version = "0.29.0", optional = true }
opentelemetry_sdk = { version = "0.28.0", optional = true, features = [
  "rt-tokio",
] }
opentelemetry = { version = "0.28.0", optional = true }
opentelemetry-otlp = { version = "0.28.0", optional = true }

tui-markdown = "0.3.1"
uuid = { version = "1.15.1", features = ["v4"] }
derive_builder = "0.20.2"
tui-logger = { features = ["tracing-support"], version = "0.14.5" }
# Only needed for tui-logger filtering
log = "0.4.26"
throbber-widgets-tui = "0.8.0"
ignore = "0.4.23"
async-trait = "0.1.87"
url = "2.5.4"
octocrab = "0.43.0"
indoc = "2.0.5"
tavily = "2.0.3"
regex = "1.11.1"
clap = { version = "4.5.31", features = ["derive"] }
tera = "1.20.0"
rust-embed = { version = "8.6.0", features = ["debug-embed"] }
ratatui-splash-screen = "0.1.4"
reqwest = { version = "0.12.12", features = [
  "rustls-tls",
  "charset",
  "http2",
  "macos-system-configuration",
], default-features = false }
redb = { version = "2.3.0" }
lancedb = { version = "0.17.0", default-features = false, features = [
  "rustls-tls",
] }
num_cpus = "1.16.0"
htmd = "0.1.6"
ansi-to-tui = "7.0.0"
tempfile = { version = "3.17.1" }
backoff = "0.4.0"
copypasta = "0.10.1"
strip-ansi-escapes = "0.2.1"
inquire = "0.7.5"
config = { version = "0.15.6", features = ["toml", "convert-case"] }
dyn-clone = "1.0.18"
shell-escape = "0.1.5"
update-informer = { version = "1.2.0", features = [
  "crates",
  "ureq",
  "rustls-tls",
], default-features = false }

# Something is still pulling in libssl, this is a quickfix and should be investigated
[target.'cfg(linux)'.dependencies]
openssl-sys = { version = "0.9.106", features = ["vendored"] }

[dev-dependencies]
test-log = { version = "0.2.17", features = ["trace"] }
insta = "1.42.2"
assert_cmd = "2.0.16"
predicates = "3.1.3"
swiftide-core = { version = "0.22.0", features = ["test-utils"] }
mockall = "0.13.1"
rexpect = "0.6.0"


[lints.rust]
# Some testing code has `unsafe` since 2024
unsafe_code = "deny"
unexpected_cfgs = { level = "warn", check-cfg = [
  'cfg(coverage,coverage_nightly)',
] }

[lints.clippy]
cargo = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }
# blocks_in_conditions = "allow"
# must_use_candidate = "allow"
module_name_repetitions = "allow"
# missing_fields_in_debug = "allow"
# # Should be fixed asap
multiple_crate_versions = "allow"
# Prefer to keep this explicit as it avoids accidental moves
needless_borrow = "allow"

missing_errors_doc = "allow"

[features]
default = ["otel"]
"otel" = [
  "dep:tracing-opentelemetry",
  "dep:opentelemetry_sdk",
  "dep:opentelemetry",
  "dep:opentelemetry-otlp",
]


[patch.crates-io]
# swiftide = { path = "../swiftide/swiftide" }
# swiftide-macros = { path = "../swiftide/swiftide-macros" }
# swiftide-core = { path = "../swiftide/swiftide-core" }

[workspace.metadata.cross.target.x86_64-unknown-linux-gnu]
image = "rust:1.83.0"
pre-build = [
  "apt-get update && apt-get --assume-yes install libssl-dev ripgrep fd-find git ssh curl libstdc++6 build-essential protobuf-compiler libprotobuf-dev pkg-config iputils-ping make libxcb1-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev",
]


# The profile that 'dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"
[profile.profiling]
inherits = "release"
debug = true
